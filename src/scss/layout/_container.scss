// Container
// Styles for the main content area that hosts the container
@use '../abstracts/variables' as vars;
@use '../abstracts/mixins' as mix;

main {
  flex-grow: 1;       // Main takes available vertical space after the header
  display: flex;        // To allow .container to be set to height: 100%
  padding: 0;           // No padding on main itself, so .container can be edge-to-edge
  overflow: hidden;     // Let .container manage its internal scrolling
}

// Full screen container
.container {
  width: 100%;
  height: 100%; // Fill the main element completely
  margin: 0 !important; // Keep existing important if necessary
  border-radius: 0; // Ensure no border radius for full-screen
  box-shadow: none; // Ensure no shadow for full-screen
  display: flex;
  flex-direction: column; // Default for smaller screens
  overflow: hidden; // Panels inside will scroll
  padding: vars.$spacing-md; // Internal padding for content within container
  gap: vars.$spacing-md; // Add gap between panels

  @include mix.respond-to(md) {
    flex-direction: row; // Side-by-side panels on medium screens and up
    justify-content: space-between; // Ensure panels are aligned at the edges
  }

  @include mix.respond-below(md) {
    padding: vars.$spacing-sm; // Adjust internal padding for smaller screens
    gap: vars.$spacing-sm; // Smaller gap for smaller screens
  }
}

// Theme Selector
.theme-selector {
  position: absolute;
  top: vars.$spacing-sm; // Using existing SASS variable for spacing
  right: vars.$spacing-sm; // Using existing SASS variable for spacing
  z-index: 1000; // Ensure it's above other content if necessary
}
